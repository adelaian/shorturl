import requests

def shorten_url(url):
    api_url = "https://api-ssl.bitly.com/v4/shorten"
    access_token = "YOUR_ACCESS_TOKEN"  # 请替换为您的Bitly访问令牌
    
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }
    payload = {
        "long_url": url
    }
    
    response = requests.post(api_url, headers=headers, json=payload)
    
    if response.status_code == 200:
        data = response.json()
        short_url = data["id"]
        print("短URL：", short_url)
    else:
        print("无法生成短URL。")

print("URL缩短器命令行工具")

while True:
    print("\n请选择操作：")
    print("1. 生成短URL")
    print("2. 退出程序")

    choice = input("请选择操作（输入数字）：")

    if choice == '2':
        print("谢谢使用，再见！")
        break

    if choice == '1':
        url = input("请输入长URL：")
        shorten_url(url)
    else:
        print("无效的选择，请重新输入。")

//以上代码是一个简单的URL缩短器命令行工具。用户可以选择生成短URL，并提供要缩短的长URL。

//shorten_url() 函数使用Bitly的API将长URL转换为短URL。您需要将代码中的 YOUR_ACCESS_TOKEN 替换为您自己的Bitly访问令牌。函数会发送POST请求到Bitly的API，并将长URL作为参数传递给API。然后，解析API的响应，并提取生成的短URL进行显示。

//应用程序使用一个无限循环来等待用户输入操作和相应的信息，并根据用户选择执行相应的操作。用户可以选择退出程序来结束应用程序的运行。

//请注意，这只是一个简单的示例，使用了Bitly的API来生成短URL。在实际项目中，您可能需要考虑更多的URL处理和更复杂的URL缩短服务，以实现一个更完善和实用的URL缩短器工具。
